LLETCODE-135
class Solution {
    public int candy(int[] ratings) {
        int candies=0;
        int n=ratings.length;
//create left array to store left relative elements
        int[] left=new int[n];
//create left array to store left relative elements
        int[] right=new int[n];
//Fill the left relative array with 1 to distribute atleat 1 candy to one person
        Arrays.fill(left,1);
//Fill the left relative array with 1 to distribute atleat 1 candy to one person
        Arrays.fill(right,1);
//For left side relative array to distribute extra candies based on ratings of the persons
        for(int i=1;i<n;i++){
            if(ratings[i]>ratings[i-1]){
                left[i]=left[i-1]+1;
            }
        }
//For left side relative array to distribute extra candies based on ratings of the persons
        for(int i=n-2;i>=0;i--){
            if(ratings[i]>ratings[i+1]){
            right[i]=right[i+1]+1;
        }
    }
//Merge both leftside relative array and right side relative array by using maximum of two arrays by default math function to get exact output as follows below
    for(int i=0;i<n;i++){
        candies=candies+Math.max(left[i],right[i]);
    }
//Finally return how many candies has been distributes    
    return candies;
}
}
//INPUT:ratings = [1,0,2]
//OUTPUT:5
EXPLANATION:
You can allocate to the first, second and third child with 2, 1, 2 candies respectively.
