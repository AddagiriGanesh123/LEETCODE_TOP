LEETCODE-189
package stringAssignment;
import java.util.Arrays;
public class rotateArray2 {
    public static void main(String[] args) {
        int[] nums={1,2,3,4,5,6};
        int k=4;
        System.out.println(Arrays.toString(rotateArray(nums,k)));
    }
    public static int[] rotateArray(int[] nums,int k){
        int n=nums.length;
        k=k%n;
        reverse(nums,0,n-1);
        reverse(nums,0,k-1);
        reverse(nums,k,n-1);
        return nums;
    }
    public static void reverse(int[] nums,int start,int end){
        while(start<=end){
            int temp=nums[start];
            nums[start]=nums[end];
            nums[end]=temp;
            start++;
            end--;
        }
    }
}

Example 1:
Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]

APPROACH:
First reverse the full array from 0 to n;
Second reverse the array from 0 to k-1th element and then;
Finally reverse the elements from k to n-1 to get desired output.

